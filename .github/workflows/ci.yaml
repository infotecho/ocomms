name: CI
on:
  workflow_dispatch: {}
  push:
    branches:
      - "*"
    paths-ignore:
      - terraform
env:
  DOCKER_REGISTRY_HOST: northamerica-northeast1-docker.pkg.dev
  DOCKER_IMAGE: northamerica-northeast1-docker.pkg.dev/ocomms/ocomms/ocomms
  SERVICE_NAME: ocomms
  SERVICE_REGION: northamerica-northeast1

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - uses: golangci/golangci-lint-action@v6

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go mod download
      - run: make test

  codegen:
    name: Codegen
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go mod download
      - name: Check if `make generate` causes changes
        run: |
          make generate
          git diff --no-ext-diff --quiet --exit-code

  config:
    name: Validate config.yaml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - run: bun install -g ajv-cli
      - run: make check-config

  vulns:
    name: Vulnerability scan
    runs-on: ubuntu-latest
    steps:
      - uses: golang/govulncheck-action@v1
        with:
          go-version-file: go.mod

  build:
    name: Build
    needs: [lint, codegen, config, vulns, test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-gcloud
      - run: gcloud auth configure-docker ${{ env.DOCKER_REGISTRY_HOST }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          push: true
          tags: "${{ env.DOCKER_IMAGE }}:${{ github.sha }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-gcloud
      - name: Determine service name
        id: service_name
        run: |
          BRANCH_NAME=${GITHUB_REF##*/}
          if [ "$BRANCH_NAME" == "trunk" ]; then
            echo "name=${{ env.SERVICE_NAME }}" >> $GITHUB_OUTPUT
          else
            echo "name=${{ env.SERVICE_NAME }}-$BRANCH_NAME" >> $GITHUB_OUTPUT
          fi
      - name: Configure service.yaml
        uses: mikefarah/yq@v4
        with:
          cmd: >
            yq --inplace
            '
              .metadata.name = "${{ steps.service_name.outputs.name }}" |
              .spec.template.spec.containers[0].image = "${{ env.DOCKER_IMAGE }}:${{ github.sha }}"
            '
            k8s/service.yaml
      - name: Deploy service
        run: gcloud run services replace k8s/service.yaml --region ${{ env.SERVICE_REGION }}
      - name: Make service public
        run: |
          gcloud run services add-iam-policy-binding ${{ steps.service_name.outputs.name }} \
            --region ${{ env.SERVICE_REGION }} \
            --member="allUsers" \
            --role="roles/run.invoker"
